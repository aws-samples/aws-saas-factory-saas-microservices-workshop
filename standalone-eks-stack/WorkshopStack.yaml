Parameters:
  RepoUrl:
    Type: String
    Description: GitHub repository URL
  RepoBranchName:
    Type: String
    Default: main
    Description: GitHub repository branch
Resources:
  WSCodeBuildServiceRole6C5B169C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      Description: Workshop Studio CodeBuild Service Role
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AdministratorAccess
  WSCodeBuildServiceRoleDefaultPolicyB042BE69:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: InstallWorkshopStackAB9AD9EE
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: InstallWorkshopStackAB9AD9EE
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: InstallWorkshopStackAB9AD9EE
                  - -*
        Version: "2012-10-17"
      PolicyName: WSCodeBuildServiceRoleDefaultPolicyB042BE69
      Roles:
        - Ref: WSCodeBuildServiceRole6C5B169C
  CodeBuildTriggerLambdaRole9E8B7404:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: role for lambda to trigger codebuild
      ManagedPolicyArns:
        - Ref: CodeBuildTriggerLambdaRolePolicy009B99EE
  CodeBuildTriggerLambdaRolePolicy009B99EE:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:StartBuild
              - codebuild:StopBuild
              - codebuild:BatchGetBuilds
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      Description: role policy for lambda to trigger codebuild
      Path: /
  CodeBuildWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  CodeBuildWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Count: 1
      Handle:
        Ref: CodeBuildWaitHandle
      Timeout: "10800"
    DependsOn:
      - InstallWorkshopStackAB9AD9EE
  InstallWorkshopStackAB9AD9EE:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: SIGNAL_URL
            Type: PLAINTEXT
            Value:
              Ref: CodeBuildWaitHandle
          - Name: REPO_URL
            Type: PLAINTEXT
            Value:
              Ref: RepoUrl
          - Name: REPO_BRANCH_NAME
            Type: PLAINTEXT
            Value:
              Ref: RepoBranchName
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - WSCodeBuildServiceRole6C5B169C
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "env": {
              "shell": "bash"
            },
            "phases": {
              "build": {
                "commands": [
                  "mkdir workshop && cd workshop",
                  "git clone --single-branch --branch $REPO_BRANCH_NAME $REPO_URL .",
                  "./deploy-workshop-stack.sh"
                ]
              },
              "post_build": {
                "commands": [
                  "if [ \"$CODEBUILD_BUILD_SUCCEEDING\" == \"1\" ]; then export STATUS=\"SUCCESS\"; fi",
                  "if [ \"$CODEBUILD_BUILD_SUCCEEDING\" != \"1\" ]; then export STATUS=\"FAILURE\"; fi",
                  'export JSON_DATA="{\"Status\" : \"$STATUS\", \"Reason\" : \"Configuration Complete\", \"UniqueId\" : \"ID1234\", \"Data\" : \"Deployment complete.\"}"',
                  'echo "$JSON_DATA"',
                  "curl -X PUT --data-binary \"$JSON_DATA\" \"$SIGNAL_URL\""
                ]
              }
            }
          }
        Type: NO_SOURCE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      TimeoutInMinutes: 180
  TriggerCodeBuildAB4D5304:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |-
          import boto3
          import os
          import cfnresponse

          def lambda_handler(event, context):
              print(event)
              project_name = os.environ.get("PROJECT_NAME")
              cb_cli = boto3.client("codebuild")
              cb_cli.start_build(projectName=project_name)
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {"Response": "Success"})
      Role:
        Fn::GetAtt:
          - CodeBuildTriggerLambdaRole9E8B7404
          - Arn
      Environment:
        Variables:
          PROJECT_NAME:
            Ref: InstallWorkshopStackAB9AD9EE
      Handler: index.lambda_handler
      Runtime: python3.11
      Timeout: 900
    DependsOn:
      - CodeBuildTriggerLambdaRole9E8B7404
  CustomResourceLambda:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - TriggerCodeBuildAB4D5304
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
